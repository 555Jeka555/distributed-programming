version: '3.8'

services:
  valuator1:
    container_name: valuator1
    build:
      context: ./valuator
      dockerfile: Dockerfile
    environment:
      - LISTENING_SERVER_PORT=:8080
      - REDIS_URL=redis:6379
    healthcheck:
      test: ["CMD", "curl", "-f", "https://127.0.0.1:5001/"]
      interval: 1s
      timeout: 2s
      retries: 3
      start_period: 3s
    networks:
      - app-network
    depends_on:
      - redis

  valuator2:
    container_name: valuator2
    build:
      context: ./valuator
      dockerfile: Dockerfile
    environment:
      - LISTENING_SERVER_PORT=:8080
      - REDIS_URL=redis:6379
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://127.0.0.1:8080/" ]
      interval: 1s
      timeout: 2s
      retries: 3
      start_period: 3s
    networks:
      - app-network
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    volumes:
      - ./nginx//conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:5002:5002"
      - "127.0.0.1:5001:5001"
    networks:
      - app-network
    depends_on:
      - valuator1
      - valuator2

  redis:
    container_name: redis
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

networks:
  app-network:

volumes:
  redis_data:

version: '3.8'
services:
#  centrifugo:
#    image: centrifugo/centrifugo:latest
#    container_name: centrifugo
#    restart: always
#    ports:
#      - "8000:8000"
#      - "3000:3000"
#    environment:
#      - CENTRIFUGO_ADMIN_PASSWORD=admin_password
#      - CENTRIFUGO_ADMIN_SECRET=admin_secret
#    networks:
#      - app-network
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    volumes:
#      - ./../centrifugo/config.json:/centrifugo/config.json
#
#  eventslogger:
#    container_name: eventslogger
#    restart: always
#    build:
#      context: ./../eventslogger
#      dockerfile: Dockerfile
#    environment:
#      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
#    networks:
#      - app-network
#    healthcheck:
#      test: [ "CMD-SHELL", "ps aux | grep [a]pp" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 30s
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#
#  valuator1:
#    container_name: valuator1
#    restart: always
#    build:
#      context: ./../valuator
#      dockerfile: Dockerfile
#    environment:
#      - LISTENING_SERVER_PORT=:8080
#      - REDIS_MAIN_URL=redis-main:6379
#      - REDIS_RU_URL=redis-ru:6379
#      - REDIS_EU_URL=redis-eu:6379
#      - REDIS_ASIA_URL=redis-asia:6379
#      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "https://127.0.0.1:8080/" ]
#      interval: 3s
#      timeout: 4s
#      retries: 3
#      start_period: 3s
#    networks:
#      - app-network
#    depends_on:
#      redis-main:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#
#  valuator2:
#    container_name: valuator2
#    restart: always
#    build:
#      context: ./../valuator
#      dockerfile: Dockerfile
#    environment:
#      - LISTENING_SERVER_PORT=:8080
#      - REDIS_MAIN_URL=redis-main:6379
#      - REDIS_RU_URL=redis-ru:6379
#      - REDIS_EU_URL=redis-eu:6379
#      - REDIS_ASIA_URL=redis-asia:6379
#      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "https://127.0.0.1:8080/" ]
#      interval: 3s
#      timeout: 4s
#      retries: 3
#      start_period: 3s
#    networks:
#      - app-network
#    depends_on:
#      redis-main:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#
#  rankcalculator:
#    container_name: rankcalculator
#    restart: always
#    build:
#      context: ./../rankcalculator
#      dockerfile: Dockerfile
#    environment:
#      - REDIS_MAIN_URL=redis-main:6379
#      - REDIS_RU_URL=redis-ru:6379
#      - REDIS_EU_URL=redis-eu:6379
#      - REDIS_ASIA_URL=redis-asia:6379
#      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
#    networks:
#      - app-network
#    depends_on:
#      redis-main:
#        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
#
#  nginx:
#    image: nginx:alpine
#    container_name: nginx
#    restart: always
#    volumes:
#      - ./../nginx/conf/nginx.conf:/etc/nginx/nginx.conf
#    ports:
#      - "127.0.0.1:8080:8080"
#      - "127.0.0.1:5002:5002"
#      - "127.0.0.1:5001:5001"
#    networks:
#      - app-network
#    depends_on:
#      - valuator1
#      - valuator2
#      - centrifugo
#
#  redis-main:
#    container_name: redis-main
#    image: "redis:latest"
#    ports:
#      - "6000:6379"
#    volumes:
#      - redis_main_data:/data
#    command: redis-server --appendonly yes
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    networks:
#      - app-network
#    depends_on:
#      redis-ru:
#        condition: service_healthy
#      redis-eu:
#        condition: service_healthy
#      redis-asia:
#        condition: service_healthy
#
#  redis-ru:
#    container_name: redis-ru
#    image: "redis:latest"
#    ports:
#      - "6001:6379"
#    volumes:
#      - redis_ru_data:/data
#    command: redis-server --appendonly yes
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    networks:
#      - app-network
#
#  redis-eu:
#    container_name: redis-eu
#    image: "redis:latest"
#    ports:
#      - "6002:6379"
#    volumes:
#      - redis_eu_data:/data
#    command: redis-server --appendonly yes
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    networks:
#      - app-network
#
#  redis-asia:
#    container_name: redis-asia
#    image: "redis:latest"
#    ports:
#      - "6003:6379"
#    volumes:
#      - redis_asia_data:/data
#    command: redis-server --appendonly yes
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    networks:
#      - app-network
#
#  rabbitmq:
#    image: rabbitmq:3.13.7
#    container_name: rabbitmq
#    hostname: rabbitmq
#    volumes:
#      - rabbitmq_data:/var/lib/rabbitmq
#    ports:
#      - '5672:5672'
#      - '15672:15672'
#    healthcheck:
#      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#    networks:
#      - app-network


  # Selemium Grid
  selenium-hub:
    restart: always
    image: selenium/hub:4.1.0
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
#    depends_on:
#      - valuator1
#      - valuator2
#      - rankcalculator

  chrome:
    restart: always
    image: selenium/node-chrome:4.1.0
    shm_size: 2gb
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_VNC_NO_PASSWORD=1
    ports:
      - "7900:7900"
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub

  firefox:
    restart: always
    image: selenium/node-firefox:4.1.0
    shm_size: 2gb
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_VNC_NO_PASSWORD=1
    ports:
      - "7901:7900"
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub

networks:
  app-network:

volumes:
  redis_main_data:
  redis_ru_data:
  redis_eu_data:
  redis_asia_data:
  rabbitmq_data:
